{
    "docker-compose example/cheatsheet": {
        "prefix": "s-doco",
        "body": [
            "#",
            "",
            "",
            "version: \"3.3\"",
            "",
            "",
            "services:",
            "",
            "  app:",
            "    build: .",
            "    image: amazing:latest",
            "    # command: python -c 'import time, sys; print(\"started\", file=sys.stderr), time.sleep(3), print(\"stopping\", file=sys.stderr)'",
            "    command: python -c 'from flask import Flask; Flask(__name__).run()'",
            "    # \"... you cannot scale a service beyond 1 container if you have",
            "    # specified a custom name\"",
            "    # i.e. disables --scale SERVICE=NUM",
            "    container_name: simply-container",
            "    # \"Use the same values as the docker client --network parameter ...\"",
            "    network_mode: host",
            "    # ports:",
            "    #   - 5001:5001",
            "    # volumes:",
            "    # # # To equate",
            "    # # #   docker exec simply-container ls /App",
            "    # # #   to ls .",
            "    # #   - type: bind",
            "    # #     source: .",
            "    # #     target: /App",
            "    # # To equate",
            "    # #   docker exec simply-container ls /App",
            "    # #   to ls /var/lib/docker/volumes/docker-sandbox_some-volume/_data",
            "    # # instead",
            "    #   - type: volume",
            "    #     source: some-volume",
            "    #     target: /App",
            "    # environment:",
            "    #   - FLASK_RUN_PORT=5001",
            "",
            "",
            "volumes:",
            "  some-volume:",
            "    name: some-volume",
            "",
            "",
            "# docker-compose build",
            "#   -> equivalent to docker image build . --tag amazing:latest",
            "",
            "# docker-compose up [--detach]",
            "#   -> equivalent to",
            "#        docker-compose build",
            "#        + docker run [--detach] \\",
            "#            --name simply-container \\",
            "#            amazing:latest {{command}}",
            "#        + network stuff if not network_mode == \"host\""
        ],
        "description": ""
    }
}