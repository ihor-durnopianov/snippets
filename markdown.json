{
    "Python project template (incomplete)": {
        "prefix": "s-init",
        "body": [
            "# Basic structure of the Python project",
            "",
            "",
            "* `dev/`",
            "",
            "* `tests/`",
            "",
            "    * `conftest.py`",
            "",
            "    * `test_{{whatever}}.py`",
            "",
            "* `{{whatever}}.py`",
            "",
            "* `.gitignore`",
            "",
            "    ```bash",
            "    echo \"# To be ignored by VCS",
            "",
            "",
            "    __pycache__/",
            "    *.egg-info/\" > .gitignore",
            "    ```",
            "",
            "* `.pylintrc`",
            "",
            "* `Makefile`",
            "",
            "    ```bash",
            "    echo \"#",
            "",
            "    SHELL := /bin/bash",
            "",
            "    .ONESHELL:",
            "",
            "    env:",
            "        python -m venv env",
            "        source env/bin/activate",
            "        pip install --upgrade pip",
            "        pip install wheel",
            "        pip install --requirement requirements-dev.txt",
            "        pip install --requirement requirements.txt",
            "        pip install --editable .",
            "",
            "    test: env",
            "        source env/bin/activate",
            "        pytest .",
            "",
            "    lint: env",
            "        source env/bin/activate",
            "        pylint {{whatever}}.py",
            "",
            "    build:",
            "        :",
            "",
            "    clean:",
            "    \t:\" > Makefile",
            "    ```",
            "",
            "* `pytest.ini`",
            "",
            "    ```bash",
            "    echo \";",
            "",
            "",
            "    [pytest]",
            "    addopts = --verbose\" > pylint.ini",
            "",
            "* `README.md`",
            "",
            "* `requirements.txt`",
            "",
            "    ```bash",
            "    echo \"#",
            "",
            "",
            "    # pandas==0.25.3\" > requirements.txt",
            "",
            "* requirements-dev.txt",
            "",
            "    ```bash",
            "    echo \"#",
            "",
            "",
            "    # ipython\" > requirements-dev.txt",
            "",
            "* `setup.py`"
        ],
        "description": ""
    },
    "Docker notes/cheatsheet": {
        "prefix": "s-docker",
        "body": [
            "# Docker sandbox",
            "",
            "Docker is ... OS-level virtualization to deliver software in packages called containers.",
            "",
            "Containers are isolated from one another and bundle their own software, libraries and configuration files; ....",
            "",
            "Because all of the containers share the services of a single operating system kernel, they use fewer resources than virtual machines.",
            "",
            "## Images",
            "",
            "```bash",
            "docker image ...",
            "```",
            "",
            "### To list",
            "",
            "```bash",
            "d image ls \\",
            "    [--all]",
            "```",
            "",
            "### To create - pull or build",
            "",
            "```bash",
            "d [image] pull NAME[:TAG]",
            "```",
            "",
            "Docker builds images automatically by reading the instructions from a `Dockerfile` - a text file that contains all commands, in order, needed to build a given image.",
            "",
            "```bash",
            "d [image] build PATH TO DOCKERFILE \\",
            "    --tag name:tag",
            "```",
            "",
            "### To remove, prune",
            "",
            "```bash",
            "d image rm NAME:TAG | IMAGE ID",
            "```",
            "",
            "```bash",
            "d image prune [--all] [--force]",
            "```",
            "",
            "## Containers",
            "",
            "### To list",
            "",
            "```bash",
            "d",
            "    container ls | ps \\",
            "    [--all]",
            "```",
            "",
            "### To create a.k.a. run",
            "",
            "```bash",
            "d [container] run \\",
            "    [--interactive --tty] \\",
            "    [--detach] \\",
            "    [--network host] \\",
            "    IMAGE[:TAG] | IMAGE ID [COMMAND NOT QUOTED]",
            "```",
            "",
            "### To stop",
            "",
            "```bash",
            "d [container] stop CONTAINER ID | NAME",
            "```",
            "",
            "### To remove, prune",
            "",
            "```bash",
            "d [container] rm CONTAINER ID | NAME",
            "```",
            "",
            "```bash",
            "d container prune [--force]",
            "```",
            "",
            "### To fetch logs",
            "",
            "```bash",
            "d [container] logs CONTAINER ID | NAME [--follow]",
            "```",
            "",
            "### To run \"a command in a RUNNING container\"",
            "",
            "```bash",
            "d [container] exec CONTAINER ID | NAME \\",
            "    [--interactive --tty]",
            "    [--detach]",
            "    COMMAND NOT QUOTED",
            "```",
            "",
            "### To export container's filesystem",
            "",
            "```bash",
            "d [container] export CONTAINER ID | NAME",
            "    [--output FILE]",
            "```",
            "",
            "## Volumes",
            "",
            "",
            "",
            "## Networks",
            "",
            "### To list",
            "",
            "```bash",
            "d network ls",
            "```",
            "",
            "### To create",
            "",
            "```bash",
            "d network create NETWORK NAME | ID \\",
            "    [--attachable]",
            "```",
            "",
            "### To remove, prune",
            "",
            "```bash",
            "d network rm NETWORK NAME | ID",
            "```",
            "",
            "```bash",
            "d network prune [--force]",
            "```",
            "",
            "TO BE CONTINUED..."
        ],
        "description": ""
    }
}